{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","typeFilter","setTypeFilter","searchValue","setSearchValue","value","onChange","e","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","selectTodo","setSelectTodo","useState","user","setUser","useEffect","loadUser","a","userFromServer","href","email","name","App","setTodos","isError","setIsError","isLoading","setIsLoading","fetchTodos","todosFromServer","visibleTodos","todosArr","typeToFilter","valueToSearch","resFilterTodos","filter","toLocaleLowerCase","includes","trim","toLowerCase","Error","todosFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23cdbdd7.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (selectedTodo: Todo | null) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos\n        && todos.map((todo) => {\n          const { id, title, completed } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span\n                    className=\"icon\"\n                    data-cy=\"iconCompleted\"\n                  >\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames(\n                    completed ? 'has-text-success' : 'has-text-danger',\n                  )}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={classNames(\n                        id === selectedTodo?.id\n                          ? ' far fa-eye-slash'\n                          : ' far fa-eye',\n                      )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n    </tbody>\n  </table>\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\n\ntype Props = {\n  typeFilter: string;\n  setTypeFilter: (value: string) => void;\n  searchValue: string;\n  setSearchValue: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  typeFilter,\n  setTypeFilter,\n  searchValue,\n  setSearchValue,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={typeFilter}\n            onChange={(e) => setTypeFilter(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"\n        control\n        is-expanded\n        has-icons-left\n        has-icons-right\"\n      >\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span\n          className=\"icon is-right\"\n          style={{ pointerEvents: 'all' }}\n        >\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {searchValue && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setSearchValue('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectTodo: Todo;\n  setSelectTodo: (selectTodoId: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectTodo, setSelectTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const { userId, completed } = selectTodo;\n\n  useEffect(() => {\n    const loadUser = async () => {\n      const userFromServer = await getUser(userId);\n\n      setUser(userFromServer);\n    };\n\n    loadUser();\n  }, []);\n\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p\n              className=\"block\"\n              data-cy=\"modal-title\"\n            >\n              {selectTodo.title}\n            </p>\n\n            <p\n              className=\"block\"\n              data-cy=\"modal-user\"\n            >\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [typeFilter, setTypeFilter] = useState('all');\n  const [searchValue, setSearchValue] = useState('');\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      setIsLoading(true);\n      try {\n        const todosFromServer = await getTodos();\n\n        setTodos(todosFromServer);\n      } catch {\n        setIsError(true);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchTodos();\n  }, []);\n\n  const todosFilter = (\n    todosArr: Todo[],\n    typeToFilter: string,\n    valueToSearch: string,\n  ) => {\n    const resFilterTodos = todosArr.filter((todo) => {\n      return todo.title\n        .toLocaleLowerCase()\n        .includes(valueToSearch.trim().toLowerCase());\n    });\n\n    switch (typeToFilter) {\n      case 'completed':\n        return resFilterTodos.filter((todo) => todo.completed);\n\n      case 'active':\n        return resFilterTodos.filter((todo) => !todo.completed);\n\n      case 'all':\n        return resFilterTodos;\n\n      default:\n        throw new Error('filtering error');\n    }\n  };\n\n  const visibleTodos = todosFilter(todos, typeFilter, searchValue);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                typeFilter={typeFilter}\n                setTypeFilter={setTypeFilter}\n                searchValue={searchValue}\n                setSearchValue={setSearchValue}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isError && <h3>An error occurred on load todos</h3>}\n              {isLoading && <Loader />}\n              {!isLoading && !isError && (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectTodo={selectedTodo}\n          setSelectTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}